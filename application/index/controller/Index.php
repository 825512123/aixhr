<?php
namespace app\index\controller;

use app\common\controller\Base;
use app\common\model\Member;

class Index extends Base
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
    }

    public function index()
    {
        return $this->fetch();
    }

    public function register()
    {
        if(request()->isPost()) {
            $post = input("post.");
            $res = Member::getInstance()->editMember($post);
            if ($res > 0){
                $this->refreshSessionMember(['mobile' => $post['mobile']]);
                $user = json_encode(session('member_info'));
                return json(['code' => 1, 'member_info' => $user, 'member_id' => session('member_id'), 'msg' => '注册成功']);
            } else {
                return json(['code' => 0, 'data' => '', 'msg' => '注册失败，请稍后再试']);
            }
        } else {
            return $this->fetch();
        }
    }

    public function login()
    {
        $username = input("param.username");
        $password = input("param.password");
        /*$result = $this->validate(compact('username', 'password'), 'AdminValidate');
        if(true !== $result){
            return json(['code' => -5, 'data' => '', 'msg' => $result]);
        }*/
        $member = db('member')->where(['username|mobile' => $username])->find();
        if(empty($member)){
            return json(['code' => -1, 'data' => '', 'msg' => '用户不存在！']);
        }

        if(md5(md5($password) . config('data_auth_key'))!= $member['password']){
            return json(['code' => -2, 'data' => "md5(md5($password) . config('data_auth_key'))", 'password'=> $member['password'], 'msg' => '密码错误！']);
        }

        if(1 != $member['status']){
            return json(['code' => -6, 'data' => '', 'msg' => '该账号已被禁用！']);
        }

        $data['id'] = $member['id'];
        $data['update_time'] = time();
        $data['last_login_ip'] = ip2long($_SERVER["REMOTE_ADDR"]);
        Member::getInstance()->editMember($data);

        $this->refreshSessionMember(['id' => $member['id']]);
        $user = json_encode(session('member_info'));

        return json(['code' => 1, 'member_info' => $user, 'member_id' => session('member_id'), 'msg' => '登录成功']);
    }

    public function autoLogin()
    {
        $member_id = input("param.member_id");
        $this->refreshSessionMember(['id' => $member_id]);
        $user = json_encode(session('member_info'));

        return json(['code' => 1, 'member_info' => $user, 'member_id' => session('member_id'), 'msg' => '登录成功']);
    }

    public function loginOut()
    {
        session('member_id', null);
        session('member_info', null);
        return json(['code' => 1, 'msg' => '退出成功']);
    }

    public function color()
    {
        return $this->fetch('color');
    }
}
